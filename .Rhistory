df <- read_csv('data/uberRides.csv') %>%
mutate(amount = abs(amount),
logAmount = log(amount))
source("~/Library/Mobile Documents/com~apple~CloudDocs/UCSD MFin/2022 Spring/Bayesian Learning/Week 2/code/code1.r")
getwd()
df <- read_csv('Week 2/data/uberRides.csv') %>%
mutate(amount = abs(amount),
logAmount = log(amount))
View(df)
View(df)
normalModel <- readRDS("~/Library/Mobile Documents/com~apple~CloudDocs/UCSD MFin/2022 Spring/Bayesian Learning/Week 2/data/normalModel.rds")
View(normalModel)
View(normalModel)
saveRDS(normalModel, file = 'data/normalModel.rds')
saveRDS(normalModel, file = 'Week 2/data/normalModel.rds')
thePars <- rstan::extract(fit,pars = c('alpha','mu','sigma','sigma_y'))
saveRDS(thePars, file = 'Week 2/data/normalModelDraws.rds')
## save draws
thePars <- rstan::extract(fit,pars = c('alpha','mu','sigma','sigma_y'))
## @knitr sim_adoption
library(tidyverse)
gen_y_discrete <- function(n,lambda){
y <- as.integer(runif(n) < lambda)
}
Nsim <- 10000
lambda <- runif(Nsim,min=0.01,max=0.50)
n <- 100
simDF <-  NULL
for (i in 1:Nsim){
y <- gen_y_discrete(n,lambda[i])
simDF <- bind_rows(simDF,
data.frame(y = sum(y), lambda = lambda[i]))
}
simDF %>%
ggplot(aes(x = y, y = lambda)) + geom_jitter(alpha=0.3) +
labs(x = "Number of Adopters in Sample",
y = "True Adoptation Rate")
## @knitr hist_cond_data
# One survey sample says 20 adopters - what are plausible values of p?
simDF %>%
filter(y == 20) %>%
ggplot(aes(x = lambda,y=..density..)) + geom_histogram() +
geom_density(alpha=.2, fill="#FF6666") + xlim(0,0.40) +
labs(title = 'Distribution of lambda conditional on y=20 adopters')
# One survey sample says 10 adopters - what are plausible values of lambda?
simDF %>%
filter(y == 10) %>%
ggplot(aes(x = lambda,y=..density..)) + geom_histogram() +
geom_density(alpha=.2, fill="#FF6666") + xlim(0,0.40) +
labs(title = 'Distribution of lambda conditional on y=10 adopters')
## @knitr calcProb
yObs <- 20
pUnder <- 0.3
tmp <- simDF %>%
filter(y == yObs)
probP <- sum(tmp$lambda > pUnder)/nrow(tmp)
## @knitr hist_estimator
# True lambda=0.20
lambda0 = 0.20
lambdahat <- rep(0,Nsim)
for (i in 1:Nsim){
y <- gen_y_discrete(n,lambda0)
lambdahat[i] <- sum(y)/n
}
data.frame(lambdahat = lambdahat) %>%
ggplot(aes(x = lambdahat,y=..density..)) + geom_histogram() +
geom_density(alpha=.2, fill="#FF6666") + xlim(0,0.40) +
labs(title = 'Distribution of Estimator when lambda=0.2')
## @knitr sim_adoption
library(tidyverse)
gen_y_discrete <- function(n,lambda){
y <- as.integer(runif(n) < lambda)
}
Nsim <- 10000
lambda <- runif(Nsim,min=0.01,max=0.50)
n <- 100
simDF <-  NULL
for (i in 1:Nsim){
y <- gen_y_discrete(n,lambda[i])
simDF <- bind_rows(simDF,
data.frame(y = sum(y), lambda = lambda[i]))
}
simDF %>%
ggplot(aes(x = y, y = lambda)) + geom_jitter(alpha=0.3) +
labs(x = "Number of Adopters in Sample",
y = "True Adoptation Rate")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(rstan)
library(tidyverse)
library(rstan)
df <- read_csv('thetaDrawsM1.csv')
knitr::opts_chunk$set(echo = TRUE)
draws <- read_csv('thetaDrawsM1.csv')
library(tidyverse)
draws <- read_csv('thetaDrawsM1.csv')
draws <- read_csv('thetaDrawsM1.csv')
knitr::opts_chunk$set(echo = TRUE, warning = FALSE)
library(tidyverse)
draws <- read_csv('thetaDrawsM1.csv')
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
draws <- read_csv('thetaDrawsM1.csv')
parameters <- read_csv('parameters.csv')
df <- read_csv('data.csv')
parameters <- read_csv('parameters.csv')
draws <- read_csv('thetaDrawsM1.csv')
View(df)
View(df)
q1 <- df %>% group_by(player) %>% summarise(mean(y))
colnames(q1) = c('player', 'win_ratio')
# q1$a = log(q1$)
q1 <- df %>% group_by(player) %>% summarise(mean(y))
colnames(q1) = c('player', 'win_ratio')
q1$a = log(q1$win_ratio / (1 - q1$win_ratio))
q1 %>% slice_min(a, n = 10)
q1 <- df %>% group_by(player) %>% summarise(mean(y))
colnames(q1) = c('player', 'win_ratio')
q1$a = log(q1$win_ratio / (1 - q1$win_ratio))
q1Top10 <- q1 %>% slice_min(a, n = 10)
q1 <- df %>% group_by(player) %>% summarise(mean(y))
colnames(q1) = c('player', 'win_ratio')
q1$a = log(q1$win_ratio / (1 - q1$win_ratio))
q1Top10 <- q1 %>% slice_min(a, n = 10)
#### question2 ####
q1 %>% slice_max(a, n=10)
q2 <- merge(q1, df %>% group_by(player) %>% count(), on='player')
q2 %>% slice_max(a, n=10)
# the best player only played 5 games
#### question3 ####
q3 = merge(q2, parameters, on='player')
q3 = q3[-c(499),]
ggplot(q3, aes(x=alpha, y=a)) + geom_point()+ coord_fixed(ratio = 1)
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
# library
library(tidyverse)
library(rstan)
draws <- read.csv('thetaDrawsM1.csv')
q1 %>% slice_min(a, n=10)
q1 <- df %>% group_by(player) %>% summarise(mean(y))
q1 <- df %>% group_by(player) %>% summarise(mean(y))
# library
library(tidyverse)
library(rstan)
library(nleqslv)
library(ggplot2)
library(ModelMetrics)
bilModel <- stan_model(file='MLM_binomial.stan')
# data
df <- read.csv('data.csv')
parameters <- read.csv('parameters.csv')
draws <- read.csv('thetaDrawsM1.csv')
q1 <- df %>% group_by(player) %>% summarise(mean(y))
colnames(q1) = c('player', 'win_ratio')
q1$a = log(q1$win_ratio/(1-q1$win_ratio))
q1 %>% slice_min(a, n=10)
q1 %>% slice_max(a, n=10)
q2 <- merge(q1, df %>% group_by(player) %>% count(), on='player')
q2 %>% slice_max(a, n=10)
# the best player only played 5 games
q3 = merge(q2, parameters, on='player')
q3 = q3[-c(499),]
ggplot(q3, aes(x=alpha, y=a)) + geom_point()+ coord_fixed(ratio = 1)
q3$n_group = ifelse(q3$n<=15, 1,
ifelse(q3$n<=25,2,
ifelse(q3$n<=40, 3,4)))
q3 %>% filter(n_group %in% c(1,4)) %>%
ggplot(aes(x=alpha, y=a)) +
geom_point(aes(color = n_group)) +
coord_fixed(ratio = 1)
sqrt(sum((q3$a - q3$alpha)^2)/nrow(q3))
q3 %>% group_by(n_group) %>% summarise(RMSE = rmse(a, alpha))
q4 <- draws %>% group_by(group) %>% summarise(mean(value))
q4 <- draws %>% group_by(n_group) %>% summarise(mean(value))
q4$rank = rank(desc(q4$a1))
